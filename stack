stack
스택은 가장 나중에 들어온 자료가 가장 먼저 처리되는 후입선출 자료구조이다.
구멍이 하나밖에 없는 병이라고 생각하면 이해하기 쉽다
데이터 저장소에서 새로 들어오는 데이터의 위치가 저장소의 끝 부분(Top 혹은 Top pointer라고 한다)이고,
내보내는 데이터 역시 저장소의 Top에서 나간다. 입력은 push, 출력은 pop이다. peek는 Top의 위치에 있는 데이터를 확인하는 것을 말한다.

스택은 추상 자료형으로
추상자료형 : 기능의 구현 부분을 나타내지 않고 순수한 기능이 무엇인지 나열한 것을 추상 자료형

Stack - push
스택에 원소를 넣을 때에는 append 메서드를 이용해 리스트의 가장 마지막에 원소를 넣도록 한다
1. stack = [1,2,3]
stack.append(4)

 2.def push (self, item):
        self.top.append(item)
        
Stack - init
파이썬에서는 리스트로 스택을 흉내 낸다. 따라서 스택 자료구조를 초기화할 때에는 빈 리스트를 만들어준다
stack = []


Stack - pop
스택에서 원소를 제거할 때에는 pop 메소드를 이용해 리스트의 가장 마지막 원소를 제거해준다. 이때, pop 메서드에 의해 제거한 원소를 리턴 받을 수 있다.
1. stack = [1,2,3]
top = stack.pop()
2. def pop(self):
        if not self.isEmpty():
            return self.top.pop(-1)
        else:
            print("Stack underflow")

Stack - top
스택에서 원소를 제거하지 않고 가져오기만 할 때에는 [-1]을 이용하도록 한다.
stack = [1,2,3]
top = stack[-1]

관련 문제 주소 : https://www.acmicpc.net/problem/10828
